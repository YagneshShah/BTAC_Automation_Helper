<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>btac_automation_helper</groupId>
	<artifactId>btac_automation_helper</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>btac_automation_helper</name>
	<description>btac_automation_helper for web, mobile and api automation</description>

	<dependencies>
		<dependency>
			<groupId>com.typesafe</groupId>
			<artifactId>config</artifactId>
			<version>1.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>3.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-api</artifactId>
			<version>3.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-server</artifactId>
			<version>3.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>7.0.0</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/net.sourceforge.jexcelapi/jxl -->
		<dependency>
			<groupId>net.sourceforge.jexcelapi</groupId>
			<artifactId>jxl</artifactId>
			<version>2.6.12</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.twitter4j/twitter4j-core -->
		<dependency>
			<groupId>org.twitter4j</groupId>
			<artifactId>twitter4j-core</artifactId>
			<version>4.0.7</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.twitter4j/twitter4j-stream -->
		<dependency>
			<groupId>org.twitter4j</groupId>
			<artifactId>twitter4j-stream</artifactId>
			<version>4.0.7</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.twitter4j/twitter4j-async -->
		<dependency>
			<groupId>org.twitter4j</groupId>
			<artifactId>twitter4j-async</artifactId>
			<version>4.0.7</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.twitter4j/twitter4j-media-support -->
		<dependency>
			<groupId>org.twitter4j</groupId>
			<artifactId>twitter4j-media-support</artifactId>
			<version>4.0.6</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/commons-net/commons-net -->
		<!-- used by CurrencyDateTime, etc -->
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.6</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.appium/java-client -->
		<dependency>
			<groupId>io.appium</groupId>
			<artifactId>java-client</artifactId>
			<version>7.2.0</version>
		</dependency>


		<!-- used by ReportParseGoogleUpdateForTestNgReport -->
		<!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.12.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.google.api-client/google-api-client -->
		<dependency>
			<groupId>com.google.api-client</groupId>
			<artifactId>google-api-client</artifactId>
			<version>1.30.2</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/javax.mail/javax.mail-api -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>javax.mail-api</artifactId>
			<version>1.6.2</version>
		</dependency>




		<dependency>
			<groupId>com.unboundid</groupId>
			<artifactId>unboundid-ldapsdk</artifactId>
			<version>1.1.3</version>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>1.2.5</version>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>1.2.5</version>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-jvm-deps</artifactId>
			<version>1.0.5</version>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-picocontainer</artifactId>
			<version>1.2.5</version>
		</dependency>
		<dependency>
			<groupId>com.vimalselvam</groupId>
			<artifactId>cucumber-extentsreport</artifactId>
			<version>3.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.aventstack</groupId>
			<artifactId>extentreports</artifactId>
			<version>4.0.9</version>
		</dependency>
		<!-- //for autoit... -->
		<!-- <dependency> <groupId>net.sf.jacob-project</groupId> <artifactId>jacob</artifactId> 
			<version>1.14.3</version> </dependency> <dependency> <groupId>com.jacob.autoit</groupId> 
			<artifactId>jacob-autoit</artifactId> <version>LATEST</version> </dependency> 
			<dependency> <groupId>de.openkeyword</groupId> <artifactId>autoit</artifactId> 
			<version>0.1.17</version> </dependency> -->
		<!-- //for SSH -->
		<dependency>
			<groupId>ch.ethz.ganymed</groupId>
			<artifactId>ganymed-ssh2</artifactId>
			<version>build210</version>
		</dependency>



		<!-- Rest Assured dependencies: -->
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>2.9.0</version>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>4.0.0</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple -->
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.10.3</version>
		</dependency>

		<!-- commented since, json-path is better but dependency gives error in 
			hookstepdefinition for not recognizing import cucumber.api.scenario -->
		<!-- <dependency> <groupId>com.jayway.jsonpath</groupId> <artifactId>json-path</artifactId> 
			<version>2.1.0</version> </dependency> -->
		<!-- <dependency> <groupId>com.google.guava</groupId> <artifactId>guava</artifactId> 
			<version>21.0</version> </dependency> -->
		<dependency><!--used by MobileCommonMethods, restassured, etc -->
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20160212</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>2.4.5</version>
		</dependency>
		<!-- for trust all SSL certificates -->
		<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.9</version>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.github.tomakehurst/wiremock -->
		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock</artifactId>
			<version>2.24.1</version>
			<type>pom</type>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.github.tomakehurst/wiremock-standalone -->
		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock-standalone</artifactId>
			<version>2.24.1</version>
			<scope>test</scope>
		</dependency>


	</dependencies>



	<build>
		<sourceDirectory>src</sourceDirectory>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- <plugin> This plugin might show error but it works. Plugin helps bamboo or cmd 
					to compile java files from multiple source folder paths mentioned. Reference 
					url: https://confluence.atlassian.com/cloverkb/maven-2-plugin-fails-with-cannot-find-symbol-exception-when-defining-two-locations-for-source-files-177340627.html
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.1</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main</source>
								<source>src/test</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin> -->

			<!-- A project's dependencies can be analyzed as part of the build process 
				by binding the dependency:analyze-only goal to the lifecycle. By default, 
				the analysis will be performed during the verify lifecycle phase. The plugin 
				can then be configured to fail the build if any dependency analysis warnings 
				are encountered by setting the failOnWarning parameter. Command to execute: 
				use "mvn verify" from project directory -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>analyze</id>
						<goals>
							<goal>analyze-only</goal>
						</goals>
						<configuration>
							<failOnWarning>true</failOnWarning>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>